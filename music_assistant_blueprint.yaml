blueprint:
  domain: automation
  name: Music Assistant - Voice DE
  source_url: https://github.com/wendevlin/music-assistant-blueprints-de/blob/main/music_assistant_blueprint.yaml
  description: '
    ![Image](https://github.com/wendevlin/music-assistant-blueprints-de/blob/main/assets/music-assistant.png?raw=true)
  
    # Play media using voice commands
  
    ### Usage

    All sentences must:
    
    * beginnen mit den Worten `Spiele`, gefolgt von dem Elementtyp `Künstler/Track/Album/Playlist/Radio` und dann dem Namen des Elements
    
    * für Album und Track optional gefolgt von `von artist` und dann dem Künstlernamen
    
    * dann optional gefolgt von einem Bereichsnamen oder Gerätenamen

    * dann, für Künstler, Track, Album oder Playlist, optional gefolgt von dem Satz `mit radio Modus`
    
    #### Acceptable variations

    There are acceptable variations to some words and inclusion of the word `the` is optional.

    #### Examples

    ```
    Spiele den Künstler Pink Floyd in der Küche
    
    Spiele das Album Jagged Little Pill im Arbeitszimmer
    
    Spiele das Album Greatest Hits vom Künstler James Taylor in der Küche
    
    Spiele den Track New Years Day im Schlafzimmer
    
    Spiele den Track New Years Day im Schlafzimmer im Radiomodus
    
    Spiele das Lied A Hard Days Night von Billy Joel im Schlafzimmer
    
    Spiele die Playlist Classic Rock im Arbeitszimmer
    
    Spiele den Radiosender BBC Radio 1 im Schlafzimmer

    Spiele das Album Classical Nights auf dem Schlafzimmer Sonos Lautsprecher
    
    Spiele die Platte Classical Nights auf dem Schlafzimmer Sonos Lautsprecher

    Spiele die Band U2
    
    ```
  '
  input:
    default_player_entity_id_input: 
      name: Default Media Player
      selector:
        entity:
          filter:
            integration: music_assistant
            domain: media_player


triggers:
  - trigger: conversation
    command:
      - "(spiele) [(das|die|der) ](album|platte|zusammenstellung|single|playlist) {media_name} [von [dem ](künstler|band|gruppe) {artist}] (in|auf|mit) [dem ]{area_or_player_name}[ (mit) {radio_mode}]"
    id: album
  - trigger: conversation
    command:
      - "(spiele) [(den|das|die) ](track|lied|song) {media_name} [von [dem ](künstler|band|gruppe) {artist}] (in|auf|mit) [dem ]{area_or_player_name}[ (mit) {radio_mode}]"
    id: track
  - trigger: conversation
    command:
      - "(spiele) [(den|die|das) ](künstler|band|gruppe) {media_name} (in|auf|mit) [dem ]{area_or_player_name}[ (mit) {radio_mode}]"
    id: artist
  - trigger: conversation
    command:
      - "(spiele) [(den|das) ]((radiosender)|(radio)|(sender)) {media_name} (in|auf|mit) [dem ]{area_or_player_name}"
    id: radio
  - trigger: conversation
    command:
      - "(spiele) [die ]playlist {media_name} (in|auf|mit) [dem ]{area_or_player_name}[ (mit) {radio_mode}]"
    id: playlist
conditions: []
actions:
  - variables:
      default_player_entity_id: !input default_player_entity_id_input
      trigger_id: "{{ trigger.id }}"
      media_name: "{{ trigger.slots.media_name }}"
      media_type: |
        {% if 'radio' in media_name or 'Radio' in media_name %}
          radio
        {% else %}
          {{ trigger_id }}
        {% endif %}
      artist: "{{ trigger.slots.artist }}"
      area_or_player_name: "{{ trigger.slots.area_or_player_name }}"
      assist_device_id: "{{ trigger.device_id }}"
      radio_mode_str: "{{ trigger.slots.radio_mode or '' }}"
      radio_mode: "{{ 'radio' in radio_mode_str.lower() }}"
      player_entity_id_by_player_name: >
        {{ expand(integration_entities('music_assistant')) |
        selectattr("attributes.mass_player_type", 'defined') |
        selectattr("attributes.friendly_name", 'equalto', area_or_player_name) |
        join(', ', attribute="entity_id") }}
      player_entity_id_by_area_name: >
        {{ expand(area_entities(area_or_player_name)) |
        selectattr("attributes.mass_player_type", 'defined') |
        selectattr("attributes.friendly_name", 'equalto', area_or_player_name) |
        join(', ', attribute="entity_id") }}
      player_entity_id_by_assist_area: |
        {% if assist_device_id and area_id(assist_device_id)  %}
          {{ expand(area_entities(area_id(assist_device_id))) | selectattr("attributes.mass_player_type", 'defined')  | join(', ', attribute="entity_id") }}
        {% else %}
          None
        {% endif %}
      mass_player_entity_id: |
        {% if player_entity_id_by_player_name %}
          {{ player_entity_id_by_player_name }}
        {% elif player_entity_id_by_area_name %}
          {{ player_entity_id_by_area_name }}
        {% elif player_entity_id_by_assist_area  %}
          {{ player_entity_id_by_assist_area }}
        {% else %}
          {{ default_player_entity_id }}
        {% endif %}
      mass_player_name: "{{ state_attr(mass_player_entity_id, 'friendly_name') }}"
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ media_type == 'album' }}"
        sequence:
          - action: music_assistant.play_media
            metadata: {}
            data:
              media_id: "{{ media_name }}"
              artist: "{{ artist }}"
              media_type: "{{ media_type }}"
              radio_mode: "{{ radio_mode }}"
            target:
              entity_id: "{{ mass_player_entity_id }}"
      - conditions:
          - condition: template
            value_template: "{{ media_type == 'track' }}"
        sequence:
          - action: music_assistant.play_media
            metadata: {}
            data:
              media_id: "{{ media_name }}"
              artist: "{{ artist }}"
              media_type: "{{ media_type }}"
              radio_mode: "{{ radio_mode }}"
            target:
              entity_id: "{{ mass_player_entity_id }}"
      - conditions:
          - condition: template
            value_template: "{{ media_type == 'artist' }}"
        sequence:
          - action: music_assistant.play_media
            metadata: {}
            data:
              media_id: "{{ media_name }}"
              media_type: "{{ media_type }}"
              radio_mode: "{{ radio_mode }}"
            target:
              entity_id: "{{ mass_player_entity_id }}"
      - conditions:
          - condition: template
            value_template: "{{ media_type == 'radio' }}"
        sequence:
          - action: music_assistant.play_media
            metadata: {}
            data:
              media_id: "{{ media_name }}"
              media_type: "{{ media_type }}"
            target:
              entity_id: "{{ mass_player_entity_id }}"
      - conditions:
          - condition: template
            value_template: "{{ media_type == 'playlist' }}"
        sequence:
          - action: music_assistant.play_media
            metadata: {}
            data:
              media_id: "{{ media_name }}"
              media_type: "{{ media_type }}"
              radio_mode: "{{ radio_mode }}"
            target:
              entity_id: "{{ mass_player_entity_id }}"
  - set_conversation_response: "{{ trigger.slots.media_name }} spielt auf {{ mass_player_name }}"
mode: single
