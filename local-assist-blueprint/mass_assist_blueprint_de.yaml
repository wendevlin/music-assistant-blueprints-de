blueprint:
  domain: automation
  name: Music Assistant - (nur) lokale Sprachsteuerungs-Blueprint
  source_url: https://github.com/music-assistant/voice-support/blob/main/local-assist-blueprint/mass_assist_blueprint_de.yaml
  description: '
    ![Bild](https://github.com/music-assistant/voice-support/blob/main/assets/music-assistant.png?raw=true)

    # Medien mit Sprachbefehlen abspielen

    ### Verwendung

    Alle Sätze müssen:

    * mit den Wörtern `Spiele` oder `Höre` beginnen, gefolgt vom Medientyp `Künstler/Lied/Album/Playlist/Radio` und dann dem Namen des Mediums

    * für Album und Lied optional gefolgt von `von (dem) Künstler` und dann dem Künstlernamen

    * optional gefolgt von einem Bereichs- oder Gerätenamen

    * für Künstler, Titel, Album oder Wiedergabeliste optional gefolgt von der Phrase `im Radiomodus`

    #### Akzeptable Variationen

    Es gibt akzeptable Variationen für einige Wörter

    #### Beispiele

    ```

    Spiele den Künstler Pink Floyd in der Küche

    Höre das Album Jagged Little Pill im Arbeitszimmer

    Höre das Album Greatest Hits vom Künstler James Taylor in der Küche

    Spiele den Titel New Years Day im Schlafzimmer

    Spiele den Titel New Years Day im Schlafzimmer im Radiomodus

    Spiele das Lied A Hard Days Night von Billy Joel im Schlafzimmer

    Höre die Playlist Classic Rock im Arbeitszimmer

    Höre das Radio BBC Radio 1 im Schlafzimmer

    Spiele das Album Classical Nights auf dem Schlafzimmer-Sonos-Lautsprecher

    Höre die Platte Classical Nights auf dem Schlafzimmer-Sonos-Lautsprecher

    Spiele die Band U2

    ```
  '
  input:
    default_player_entity_id_input:
      name: Standard-Mediaplayer
      selector:
        entity:
          filter:
            integration: music_assistant
            domain: media_player

triggers:
  - trigger: conversation
    command:
      - "(spiele|höre) [das ](album|platte|sammlung|single) {media_name} [von [(dem|der) ](künstler|band|gruppe) {artist}] [(im|auf|über) [dem ]{area_or_player_name}][ (mit|im) {radio_mode}]"
    id: album
  - trigger: conversation
    command:
      - "(spiele|höre) [das ](song|titel|lied) {media_name} [von [(dem|der) ](künstler|band|gruppe) {artist}] [(im|auf|über) [dem ]{area_or_player_name}][ (mit|im) {radio_mode}]"
    id: track
  - trigger: conversation
    command:
      - "(spiele|höre) [(den|die) ](künstler|band|gruppe) {media_name} [(im|auf|über) [dem ]{area_or_player_name}][ (mit|im) {radio_mode}]"
    id: artist
  - trigger: conversation
    command:
      - "(spiele|höre) [(den|das) ]((radiosender)|(radio)|(sender)) {media_name} [(im|auf|über) [dem ]{area_or_player_name}]"
    id: radio
  - trigger: conversation
    command:
      - "(spiele|höre) [die ](wiedergabeliste|playlist) {media_name} [(im|auf|über) [dem ]{area_or_player_name}][ (mit|im) {radio_mode}]"
    id: playlist
conditions: []
actions:
  - variables:
      default_player_entity_id: !input default_player_entity_id_input
      trigger_id: "{{ trigger.id }}"
      media_name: "{{ trigger.slots.media_name }}"
      media_type: |
        {% if 'radio' in media_name or 'Radio' in media_name %}
          radio
        {% else %}
          {{ trigger_id }}
        {% endif %}
      artist: "{{ trigger.slots.artist }}"
      area_or_player_name: "{{ trigger.slots.area_or_player_name }}"
      assist_device_id: "{{ trigger.device_id }}"
      radio_mode_str: "{{ trigger.slots.radio_mode or '' }}"
      radio_mode: "{{ 'radio' in radio_mode_str.lower() }}"
      player_entity_id_by_player_name: >
        {{ expand(integration_entities('music_assistant')) |
        selectattr("attributes.mass_player_type", 'defined') |
        selectattr("attributes.friendly_name", 'equalto', area_or_player_name) |
        join(', ', attribute="entity_id") }}
      player_entity_id_by_area_name: >
        {{ expand(area_entities(area_or_player_name)) |
        selectattr("attributes.mass_player_type", 'defined') |
        selectattr("attributes.friendly_name", 'equalto', area_or_player_name) |
        join(', ', attribute="entity_id") }}
      player_entity_id_by_assist_area: |
        {% if assist_device_id and area_id(assist_device_id)  %}
          {{ expand(area_entities(area_id(assist_device_id))) | selectattr("attributes.mass_player_type", 'defined')  | join(', ', attribute="entity_id") }}
        {% else %}
          None
        {% endif %}
      mass_player_entity_id: |
        {% if player_entity_id_by_player_name %}
          {{ player_entity_id_by_player_name }}
        {% elif player_entity_id_by_area_name %}
          {{ player_entity_id_by_area_name }}
        {% elif player_entity_id_by_assist_area  %}
          {{ player_entity_id_by_assist_area }}
        {% else %}
          {{ default_player_entity_id }}
        {% endif %}
      mass_player_name: "{{ state_attr(mass_player_entity_id, 'friendly_name') }}"
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ media_type == 'album' }}"
        sequence:
          - action: music_assistant.play_media
            metadata: {}
            data:
              media_id: "{{ media_name }}"
              artist: "{{ artist }}"
              media_type: "{{ media_type }}"
              radio_mode: "{{ radio_mode }}"
            target:
              entity_id: "{{ mass_player_entity_id }}"
      - conditions:
          - condition: template
            value_template: "{{ media_type == 'track' }}"
        sequence:
          - action: music_assistant.play_media
            metadata: {}
            data:
              media_id: "{{ media_name }}"
              artist: "{{ artist }}"
              media_type: "{{ media_type }}"
              radio_mode: "{{ radio_mode }}"
            target:
              entity_id: "{{ mass_player_entity_id }}"
      - conditions:
          - condition: template
            value_template: "{{ media_type == 'artist' }}"
        sequence:
          - action: music_assistant.play_media
            metadata: {}
            data:
              media_id: "{{ media_name }}"
              media_type: "{{ media_type }}"
              radio_mode: "{{ radio_mode }}"
            target:
              entity_id: "{{ mass_player_entity_id }}"
      - conditions:
          - condition: template
            value_template: "{{ media_type == 'radio' }}"
        sequence:
          - action: music_assistant.play_media
            metadata: {}
            data:
              media_id: "{{ media_name }}"
              media_type: "{{ media_type }}"
            target:
              entity_id: "{{ mass_player_entity_id }}"
      - conditions:
          - condition: template
            value_template: "{{ media_type == 'playlist' }}"
        sequence:
          - action: music_assistant.play_media
            metadata: {}
            data:
              media_id: "{{ media_name }}"
              media_type: "{{ media_type }}"
              radio_mode: "{{ radio_mode }}"
            target:
              entity_id: "{{ mass_player_entity_id }}"
  - set_conversation_response: "{{ trigger.slots.media_name }} wird auf {{ mass_player_name }} abgespielt"
mode: single
